# Generated by Django 5.1.7 on 2025-06-08 21:14
# Modified to fix foreign key references from CaosNewsApp_usuario to auth_user

from django.db import migrations
from django.conf import settings


def fix_foreign_key_references(apps, schema_editor):
    """
    Corrige las referencias de claves foráneas que apuntan a CaosNewsApp_usuario
    para que apunten a auth_user en su lugar.
    """
    with schema_editor.connection.cursor() as cursor:
        # Deshabilitar temporalmente las restricciones de claves foráneas
        cursor.execute("PRAGMA foreign_keys=OFF;")

        # Crear tabla temporal con las referencias correctas
        cursor.execute("""
            CREATE TABLE "CaosNewsApp_noticia_temp" (
                "id_noticia" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
                "titulo_noticia" varchar(100) NOT NULL,
                "cuerpo_noticia" text NOT NULL,
                "activo" bool NOT NULL,
                "fecha_creacion" datetime NOT NULL,
                "fecha_modificacion" datetime NOT NULL,
                "id_categoria" integer NOT NULL REFERENCES "CaosNewsApp_categoria" ("id_categoria") DEFERRABLE INITIALLY DEFERRED,
                "id_usuario" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
                "eliminado" bool NOT NULL,
                "destacada" bool NOT NULL,
                "id_pais" integer NULL REFERENCES "CaosNewsApp_pais" ("id_pais") DEFERRABLE INITIALLY DEFERRED
            );
        """)

        # Copiar datos de la tabla actual a la temporal
        cursor.execute("""
            INSERT INTO "CaosNewsApp_noticia_temp"
            SELECT * FROM "CaosNewsApp_noticia";
        """)

        # Eliminar la tabla actual
        cursor.execute('DROP TABLE "CaosNewsApp_noticia";')

        # Renombrar la tabla temporal
        cursor.execute('ALTER TABLE "CaosNewsApp_noticia_temp" RENAME TO "CaosNewsApp_noticia";')        # Recrear índices
        cursor.execute('CREATE INDEX "CaosNewsApp_noticia_id_categoria_fbc23f33" ON "CaosNewsApp_noticia" ("id_categoria");')
        cursor.execute('CREATE INDEX "CaosNewsApp_noticia_id_usuario_4cd5a3f4" ON "CaosNewsApp_noticia" ("id_usuario");')
        cursor.execute('CREATE INDEX "CaosNewsApp_noticia_id_pais_174b1146" ON "CaosNewsApp_noticia" ("id_pais");')

        cursor.execute("PRAGMA foreign_keys=ON;")

        print("Referencias de claves foráneas corregidas exitosamente")


def reverse_fix_foreign_key_references(apps, schema_editor):
    """
    Función de reversa - no implementada porque no es reversible
    """
    print("Esta operación no es reversible")
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('CaosNewsApp', '0023_fix_noticia_user_fk'),
    ]

    operations = [
        # Primero corregir las referencias de claves foráneas
        migrations.RunPython(
            fix_foreign_key_references,
            reverse_fix_foreign_key_references,
        ),

        # Luego eliminar el modelo Usuario personalizado
        migrations.DeleteModel(
            name='Usuario',
        ),
    ]
