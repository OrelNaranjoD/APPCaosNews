# Configuración pytest unificada para QA
# Solo se usan pruebas en modo QA con datos reales de producción

[pytest]
DJANGO_SETTINGS_MODULE = CaosNews.settings.settings_qa
python_files = tests.py test_*.py *_tests.py

# Configuración optimizada para QA con datos reales
addopts = -v --capture=sys --tb=short --disable-warnings --reuse-db --strict-markers --nomigrations --no-migrations

# Paths de pruebas
testpaths = CaosNewsApp/tests

# Configuración de logging para QA
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Marcadores específicos para QA
markers =
    slow: marca tests que tardan mucho en ejecutarse
    api: tests de API REST
    integration: tests de integración con datos reales de producción
    unit: tests unitarios
    qa_only: tests que solo se ejecutan en QA
    production_data: tests que requieren datos de producción
    user_roles: tests de roles de usuario (admin, periodista, lector)
    media_files: tests que requieren archivos media

# Filtros de warnings
filterwarnings =
    ignore::django.utils.deprecation.RemovedInDjango60Warning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Configuración específica para base de datos QA
django_find_project = true
